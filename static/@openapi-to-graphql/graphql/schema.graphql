type Query {
  """
  Actions by account.
  
  Equivalent to GET /actions/account/{account}
  """
  actionsAccount(account: String!, first: BigInt, order_by: Order_by, order_direction: Order_direction, skip: BigInt): ActionsAccount

  """
  Actions by date.
  
  Equivalent to GET /actions/date/{date}
  """
  actionsDate(date: String!, first: BigInt, order_by: Order_by, order_direction: Order_direction, skip: BigInt): ActionsDate

  """
  Actions by name.
  
  Equivalent to GET /actions/name/{name}
  """
  actionsName(first: BigInt, name: String!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): ActionsName

  """
  Actions by block number.
  
  Equivalent to GET /actions/number/{number}
  """
  actionsNumber(first: BigInt, number: Int!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): ActionsNumber

  """
  Authorizations by action ordinal.
  
  Equivalent to GET /authorizations/action/{ordinal}
  """
  authorizationsAction(first: BigInt, order_by: Order_by, order_direction: Order_direction, ordinal: Int!, skip: BigInt): AuthorizationsAction

  """
  Authorizations by actor.
  
  Equivalent to GET /authorizations/actor/{actor}
  """
  authorizationsActor(actor: String!, first: BigInt, order_by: Order_by, order_direction: Order_direction, skip: BigInt): AuthorizationsActor

  """
  Authorizations by date.
  
  Equivalent to GET /authorizations/date/{date}
  """
  authorizationsDate(date: String!, first: BigInt, order_by: Order_by, order_direction: Order_direction, skip: BigInt): AuthorizationsDate

  """
  Authorizations by block number.
  
  Equivalent to GET /authorizations/number/{number}
  """
  authorizationsNumber(first: BigInt, number: Int!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): AuthorizationsNumber

  """
  Authorizations by permission.
  
  Equivalent to GET /authorizations/permission/{permission}
  """
  authorizationsPermission(first: BigInt, order_by: Order_by, order_direction: Order_direction, permission: String!, skip: BigInt): AuthorizationsPermission

  """
  Authorizations by transaction hash.
  
  Equivalent to GET /authorizations/transaction/{hash}
  """
  authorizationsTransaction(first: BigInt, hash: String!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): AuthorizationsTransaction

  """
  Blocks by date.
  
  Equivalent to GET /blocks/date/{date}
  """
  blocksDate(date: String!, first: BigInt, order_by: Order_by, order_direction: Order_direction, skip: BigInt): BlocksDate

  """
  Blocks by hash.
  
  Equivalent to GET /blocks/hash/{hash}
  """
  blocksHash(first: BigInt, hash: String!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): BlocksHash

  """
  Blocks by block number.
  
  Equivalent to GET /blocks/number/{number}
  """
  blocksNumber(first: BigInt, number: Int!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): BlocksNumber

  """
  Checks database connection.
  
  Equivalent to GET /health
  """
  health: String

  """
  Prometheus metrics.
  
  Equivalent to GET /metrics
  """
  metrics: String

  """
  Reflection endpoint to return OpenAPI JSON spec. Also used by Swagger to generate the frontpage.
  
  Equivalent to GET /openapi
  """
  openapi: JSON

  """
  Receivers by action ordinal.
  
  Equivalent to GET /receivers/action/{ordinal}
  """
  receiversAction(first: BigInt, order_by: Order_by, order_direction: Order_direction, ordinal: Int!, skip: BigInt): ReceiversAction

  """
  Receivers by date.
  
  Equivalent to GET /receivers/date/{date}
  """
  receiversDate(date: String!, first: BigInt, order_by: Order_by, order_direction: Order_direction, skip: BigInt): ReceiversDate

  """
  Receivers by block number.
  
  Equivalent to GET /receivers/number/{number}
  """
  receiversNumber(first: BigInt, number: Int!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): ReceiversNumber

  """
  Receivers by receiver.
  
  Equivalent to GET /receivers/receiver/{receiver}
  """
  receiversReceiver(first: BigInt, order_by: Order_by, order_direction: Order_direction, receiver: String!, skip: BigInt): ReceiversReceiver

  """
  Receivers by transaction hash.
  
  Equivalent to GET /receivers/transaction/{hash}
  """
  receiversTransaction(first: BigInt, hash: String!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): ReceiversTransaction

  """
  Search transactions
  
  Equivalent to GET /search/transactions
  """
  searchTransactions(account: String, action: String, auth: String, first: BigInt, hash: String, number: Int, order_by: Order_by, order_direction: Order_direction, receiver: String, skip: BigInt): SearchTransactions

  """
  Transactions by date.
  
  Equivalent to GET /transactions/date/{date}
  """
  transactionsDate(date: String!, first: BigInt, order_by: Order_by, order_direction: Order_direction, skip: BigInt): TransactionsDate

  """
  Transactions by hash.
  
  Equivalent to GET /transactions/hash/{hash}
  """
  transactionsHash(first: BigInt, hash: String!, order_by: Order_by, order_direction: Order_direction, skip: BigInt): TransactionsHash

  """
  Api version and Git short commit hash.
  
  Equivalent to GET /version
  """
  version: Version
}

type ActionsAccount {
  data: [ModelsActions]!
  meta: ResponseMetadata!
}

type ModelsActions {
  abi_sequence: Int!
  account: String!
  action_mroot: String!
  action_ordinal: Int!
  block_date: String!
  block_hash: String!
  block_number: Int!
  block_time: String!
  closest_unnotified_ancestor_action_ordinal: Int!
  code_sequence: Int!
  console: String!
  context_free: Boolean!
  creator_action_ordinal: Int!
  digest: String!
  elapsed: BigInt!
  execution_index: Int!
  global_sequence: Int!
  json_data: String!
  json_return_value: String!
  name: String!
  raw_data: String!
  raw_return_value: String!
  receipt_receiver: String!
  receiver: String!
  recv_sequence: Int!
  tx_hash: String!
  tx_index: Int!
  tx_status: String!
  tx_status_code: Int!
  tx_success: Boolean!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

type ResponseMetadata {
  statistics: Statistics!
  total_results: BigInt!
}

type Statistics {
  bytes_read: BigInt!
  elapsed: Float!
  rows_read: BigInt!
}

enum Order_by {
  BLOCK_NUMBER
}

enum Order_direction {
  ASC
  DESC
}

type ActionsDate {
  data: [ModelsActions]!
  meta: ResponseMetadata!
}

type ActionsName {
  data: [ModelsActions]!
  meta: ResponseMetadata!
}

type ActionsNumber {
  data: [ModelsActions]!
  meta: ResponseMetadata!
}

type AuthorizationsAction {
  data: [ModelsAuthorizations]!
  meta: ResponseMetadata!
}

type ModelsAuthorizations {
  action_ordinal: Int!
  actor: String!
  block_date: String!
  block_hash: String!
  block_number: Int!
  block_time: String!
  permission: String!
  tx_hash: String!
}

type AuthorizationsActor {
  data: [ModelsAuthorizations]!
  meta: ResponseMetadata!
}

type AuthorizationsDate {
  data: [ModelsAuthorizations]!
  meta: ResponseMetadata!
}

type AuthorizationsNumber {
  data: [ModelsAuthorizations]!
  meta: ResponseMetadata!
}

type AuthorizationsPermission {
  data: [ModelsAuthorizations]!
  meta: ResponseMetadata!
}

type AuthorizationsTransaction {
  data: [ModelsAuthorizations]!
  meta: ResponseMetadata!
}

type BlocksDate {
  data: [ModelsBlocks]!
  meta: ResponseMetadata!
}

type ModelsBlocks {
  action_mroot: String!
  block_date: String!
  block_hash: String!
  block_number: Int!
  block_time: String!
  blockroot_merkle_node_count: Int!
  confirmed: Int!
  dpos_irreversible_blocknum: Int!
  dpos_proposed_irreversible_blocknum: Int!
  failed_transactions: Int!
  previous: String!
  producer: String!
  producer_signature: String!
  schedule_version: Int!
  size: Int!
  successful_transactions: Int!
  total_actions: Int!
  total_db_ops: Int!
  total_transactions: Int!
  transaction_mroot: String!
  version: Int!
}

type BlocksHash {
  data: [ModelsBlocks]!
  meta: ResponseMetadata!
}

type BlocksNumber {
  data: [ModelsBlocks]!
  meta: ResponseMetadata!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type ReceiversAction {
  data: [ModelsReceivers]!
  meta: ResponseMetadata!
}

type ModelsReceivers {
  action_ordinal: Int!
  block_date: String!
  block_hash: String!
  block_number: Int!
  block_time: String!
  receiver: String!
  tx_hash: String!
}

type ReceiversDate {
  data: [ModelsReceivers]!
  meta: ResponseMetadata!
}

type ReceiversNumber {
  data: [ModelsReceivers]!
  meta: ResponseMetadata!
}

type ReceiversReceiver {
  data: [ModelsReceivers]!
  meta: ResponseMetadata!
}

type ReceiversTransaction {
  data: [ModelsReceivers]!
  meta: ResponseMetadata!
}

type SearchTransactions {
  data: [SearchTransactions2]!
  meta: ResponseMetadata!
}

type SearchTransactions2 {
  actions: [ModelsActions]!
  authorizations: [AuthorizationsListItem]!
  block_date: String!
  block_hash: String!
  block_number: Int!
  block_time: String!
  cpu_usage_micro_seconds: Int!
  elapsed: BigInt!
  hash: String!
  index: Int!
  net_usage: Int!
  net_usage_words: Int!
  receivers: [ReceiversListItem]!
  scheduled: Boolean!
  status: String!
  status_code: Int!
  success: Boolean!
  transaction_mroot: String!
}

type AuthorizationsListItem {
  action_ordinal: Int!
  actor: String!
  permission: String!
  tx_hash: String!
}

type ReceiversListItem {
  action_ordinal: Int!
  receiver: String!
  tx_hash: String!
}

type TransactionsDate {
  data: [ModelsTransactions]!
  meta: ResponseMetadata!
}

type ModelsTransactions {
  block_date: String!
  block_hash: String!
  block_number: Int!
  block_time: String!
  cpu_usage_micro_seconds: Int!
  elapsed: BigInt!
  hash: String!
  index: Int!
  net_usage: Int!
  net_usage_words: Int!
  scheduled: Boolean!
  status: String!
  status_code: Int!
  success: Boolean!
  transaction_mroot: String!
}

type TransactionsHash {
  data: [ModelsTransactions]!
  meta: ResponseMetadata!
}

type Version {
  commit: String!
  version: String!
}